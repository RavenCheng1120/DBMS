[Task 1]
$ CREATE CONSTRAINT studentIdConstraint ON (s:Student) ASSERT s.學號 IS UNIQUE

$ LOAD CSV WITH HEADERS FROM "file:///hw6_student_data.csv" AS csvLine
CREATE (s:Student {身份: csvLine.身份, 系所: csvLine.系所, 學號: csvLine.學號, 姓名: csvLine.姓名})


[Task 2]
$ MATCH (a:Student {學號: 'r09922063'}),(b:Student {系所: '資工系碩士班_一年級 '})
WHERE b.學號 <> 'r09922063'
CREATE (a)-[r:peer]->(b)
RETURN type(r)


[Task 3]
$ MATCH (s:Student {系所: '資工系碩士班_一年級 '})
RETURN COLLECT(s)


Part 3
[Task 1]
$ LOAD CSV WITH HEADERS FROM "file:///hw6_hobbies.csv" AS csvLine
MERGE (a:Hobby {hobby: csvLine.hobby1})
MERGE (b:Hobby {hobby: csvLine.hobby2})
MERGE (c:Hobby {hobby: csvLine.hobby3})
MERGE (d:Hobby {hobby: csvLine.hobby4})
MERGE (e:Hobby {hobby: csvLine.hobby5})

$ LOAD CSV WITH HEADERS FROM "file:///hw6_hobbies.csv" AS csvLine
CREATE (:Student {學號: csvLine.學號, 姓名: csvLine.姓名})

// Need to do 5 times
$ LOAD CSV WITH HEADERS FROM "file:///hw6_hobbies.csv" AS csvLine
MATCH (s:Student {學號: csvLine.學號}), (h:Hobby {hobby: csvLine.hobby1})
MERGE (s)-[r:interestIn]->(h)



[Pre-Task 2]
// Find friends with same hobby
$ MATCH (me:Student {學號: 'r09922063'})--(myh:Hobby)
MATCH (friend:Student)--(friendh:Hobby)
WHERE myh.hobby = friendh.hobby AND friend.學號 <> 'r09922063'
MERGE (me)-[r:hobbyFriends]->(friend)

// Print out the result
$ MATCH p=()-[r1:hobbyFriends]->() 
MATCH x=(me:Student {學號: 'r09922063'})-[r2:interestIn]->() 
RETURN p,x

// Print me, my hobby, hobby friends, their interest
MATCH p=()-[r1:hobbyFriends]->()--(ho:Hobby)
MATCH x=(me:Student {學號: 'r09922063'})-[r2:interestIn]->() 
RETURN p,x

// Connect myself to the foaf
$ MATCH (me:Student {學號: 'r09922063'})-[rHobbyF:hobbyFriends]->(friend:Student)--(friendh:Hobby)
MATCH (foaf:Student)--(foafh:Hobby)
WHERE foafh.hobby = friendh.hobby AND foaf.學號 <> 'r09922063' AND NOT (me)-[:hobbyFriends]->(foaf)
MERGE (me)-[r:foaf]->(foaf)

// print result -> with me
$ MATCH p=()-[r:foaf]->()--(h:Hobby)
RETURN p


[Task 2]
// print result -> without me 
// 75 hobbies
$ MATCH (a:Student {學號:'r09922063'})-[r:foaf]->(ff)--(h:Hobby)
RETURN ff,h

// Remove my hobby friends' hobbies
// 47 hobbies
$ MATCH (s1:Student {學號:'r09922063'})-[r1:hobbyFriends]->(hf)--(h1:Hobby)
WITH collect(distinct h1) as hobbies1
MATCH (s2:Student {學號:'r09922063'})-[r2:foaf]->(ff)--(h2:Hobby)
WITH hobbies1, ff, h2, collect(distinct h2) AS hobbies2
WHERE NONE (h2 in hobbies2 where h2 in hobbies1)
RETURN hobbies2, ff


[Task 3]
$ MATCH (s1:Student {學號:'r09922063'})-[r1:hobbyFriends]->(hf)--(h1:Hobby)
WITH collect(distinct h1) as hobbies1
MATCH (s2:Student {學號:'r09922063'})-[r2:foaf]->(ff)--(h2:Hobby)
WITH hobbies1, ff, h2, collect(distinct h2) AS hobbies2
WHERE NONE (h2 in hobbies2 where h2 in hobbies1)
RETURN hobbies2

